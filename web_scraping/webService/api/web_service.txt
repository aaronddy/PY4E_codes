1. Service Oriented Approach(SOA)

- Most non-trivial web applications use services 
- They use services from other applications
   - credit card charge
   - hotel reservation systems
- Services publish the "rules" applications must follow to make use of the service (API)

2. Multiple systems

- Initially - two systems cooperate and split the problem
- As the data/service becomes useful => multiple applications want to use the information/application

네트워크 상에서 소통하는 여러 개의 응용프로그램을 사용하려할 때 다른 곳으로부터 온 API를 사용

3. Application Program Interface
: The API itself is largely abstract in that it specifies an interface and controls the behavior of the objects specified in that interface.
The software that provides the functionality described by an API is said to be an "implementation" of the API. An API is typically defined in terms of the programming language used to build an application  